#summary Golf Markup Language Documentation: complexType Contact.

== Name ==

*[CContact Contact]*

  	

===  Super Types ===
{{{
anyType
  |
  +--Contact (restriction)
}}}
----
    

===  Documentation ===
        
			Contact type for country-club and players.
			The contact has a attribute named type to help identify the contact in a list.
		
  	
===  Properties ===

  	This component is not nillable.
---- 	
        
===  Model ===

	<...  other = xs:string  type = [SContactTypeEnum ContactTypeEnum]>  (name? ; [SPhoneNumber phone]? ; email? ; website?) </...>

----
    

=== Nested Element Summary ===
        
|| xs:string || email ||  					Electronic mail address of contact.				 ||
|| xs:string || name ||  					Name or description of contact.				 ||
|| [SPhoneNumber golfml:PhoneNumber] || [SPhoneNumber phone] ||  Telephone number of contact ||
|| xs:anyURI || website ||  					Internet web site URL of contact.				 ||      

=== Attributes ===

|| Name || Description || Type || Use || Default || Fixed || Form ||
        
|| other ||  				Alternate value for an attribute.			 || xs:string || optional ||  ||  || unqualified ||
|| type ||  Qualification of a contact || [SContactTypeEnum golfml:ContactTypeEnum] || optional ||  ||  || unqualified ||

===  Local Usage ===

    	[CCountryClub CountryClub], [CPlayer Player]
----
    <xs:complexType name="Contact">  <xs:all>    <xs:element minOccurs="0" name="name" type="xs:string">    </xs:element>    <xs:element minOccurs="0" name="phone" type="golfml:PhoneNumber">    </xs:element>    <xs:element minOccurs="0" name="email" type="xs:string">    </xs:element>    <xs:element minOccurs="0" name="website" type="xs:anyURI">    </xs:element>  </xs:all>  <xs:attribute name="type" type="golfml:ContactTypeEnum">  </xs:attribute>  <xs:attributeGroup ref="golfml:Other"/></xs:complexType>
----
        